# -*- coding: utf-8 -*-
# The Hazard Library
# Copyright (C) 2014, GEM Foundation
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""
Module exports :class:`BindiEtAl2014Rjb`,
               :class:`BindiEtAl2014RjbEC8`,
               :class:`BindiEtAl2014RjbEC8NoSOF`,
               :class:`BindiEtAl2014Rhyp`,
               :class:`BindiEtAl2014RhypEC8`,
               :class:`BindiEtAl2014RhypEC8NoSOF
"""
from __future__ import division

import numpy as np

from scipy.constants import g

from openquake.hazardlib.gsim.base import GMPE, CoeffsTable
from openquake.hazardlib import const
from openquake.hazardlib.imt import PGA, PGV, SA


class BindiEtAl2014Rjb(GMPE):
    """
    Implements European GMPE:
    D.Bindi, M. Massa, L.Luzi, G. Ameri, F. Pacor, R.Puglia and P. Augliera
    (2014), "Pan-European ground motion prediction equations for the
    average horizontal component of PGA, PGV and 5 %-damped PSA at spectral
    periods of up to 3.0 s using the RESORCE dataset", Bulletin of
    Earthquake Engineering, 12(1), 391 - 340

    The regressions are developed considering the geometrical mean of the
    as-recorded horizontal components
    The printed version of the GMPE was corrected by Erratum:
    D.Bindi, M. Massa, L.Luzi, G. Ameri, F. Pacor, R.Puglia and P. Augliera
    (2014), "Erratum to Pan-European ground motion prediction equations for the
    average horizontal component of PGA, PGV and 5 %-damped PSA at spectral
    periods of up to 3.0 s using the RESORCE dataset", Bulletin of
    Earthquake Engineering, 12(1), 431 - 448. The erratum notes that the
    printed coefficients tables were in error. In this implementation
    coefficients tables were taken from the Electronic Supplementary
    material of the original paper, which are indicated as being unaffected.
    """
    #: Supported tectonic region type is 'active shallow crust'
    DEFINED_FOR_TECTONIC_REGION_TYPE = const.TRT.ACTIVE_SHALLOW_CRUST

    #: Set of :mod:`intensity measure types <openquake.hazardlib.imt>`
    #: this GSIM can calculate. A set should contain classes from module
    #: :mod:`openquake.hazardlib.imt`.
    DEFINED_FOR_INTENSITY_MEASURE_TYPES = set([
        PGA,
        PGV,
        SA
    ])

    #: Supported intensity measure component is the geometric mean of two
    #: horizontal components
    DEFINED_FOR_INTENSITY_MEASURE_COMPONENT = const.IMC.AVERAGE_HORIZONTAL

    #: Supported standard deviation types are inter-event, intra-event
    #: and total
    DEFINED_FOR_STANDARD_DEVIATION_TYPES = set([
        const.StdDev.TOTAL,
        const.StdDev.INTER_EVENT,
        const.StdDev.INTRA_EVENT
    ])

    #: Required site parameter is only Vs30
    REQUIRES_SITES_PARAMETERS = set(('vs30', ))

    #: Required rupture parameters are magnitude and rake (eq. 1).
    REQUIRES_RUPTURE_PARAMETERS = set(('rake', 'mag'))

    #: Required distance measure is Rjb (eq. 1).
    REQUIRES_DISTANCES = set(('rjb', ))

    def get_mean_and_stddevs(self, sites, rup, dists, imt, stddev_types):
        """
        See :meth:`superclass method
        <.base.GroundShakingIntensityModel.get_mean_and_stddevs>`
        for spec of input and result values.
        """
        # extracting dictionary of coefficients specific to required
        # intensity measure type.

        C = self.COEFFS[imt]
        imean = self._get_mean(C, rup, dists, sites)
        if isinstance(imt, (PGA, SA)):
            # Convert units to g,
            # but only for PGA and SA (not PGV):
            mean = np.log((10.0 ** (imean - 2.0)) / g)
        else:
            # PGV:
            mean = np.log(10.0 ** imean)

        istddevs = self._get_stddevs(C, stddev_types, len(sites.vs30))
        stddevs = np.log(10.0 ** np.array(istddevs))
        return mean, stddevs

    def _get_mean(self, C, rup, dists, sites):
        """
        Returns the mean ground motion
        """
        return (self._get_magnitude_scaling_term(C, rup.mag) +
                self._get_distance_scaling_term(C, dists.rjb, rup.mag) +
                self._get_style_of_faulting_term(C, rup) +
                self._get_site_amplification_term(C, sites.vs30))

    def _get_magnitude_scaling_term(self, C, mag):
        """
        Returns the magnitude scaling term of the GMPE described in
        equation 3
        """
        dmag = mag - self.CONSTS["Mh"]
        if mag < self.CONSTS["Mh"]:
            return C["e1"] + (C["b1"] * dmag) + (C["b2"] * (dmag ** 2.0))
        else:
            return C["e1"] + (C["b3"] * dmag)

    def _get_distance_scaling_term(self, C, rval, mag):
        """
        Returns the distance scaling term of the GMPE described in equation 2
        """
        r_adj = np.sqrt(rval ** 2.0 + C["h"] ** 2.0)
        return (
            (C["c1"] + C["c2"] * (mag - self.CONSTS["Mref"])) *
            np.log10(r_adj / self.CONSTS["Rref"]) -
            (C["c3"] * (r_adj - self.CONSTS["Rref"])))

    def _get_style_of_faulting_term(self, C, rup):
        """
        Returns the style-of-faulting term.
        Fault type (Strike-slip, Normal, Thrust/reverse) is
        derived from rake angle.
        Rakes angles within 30 of horizontal are strike-slip,
        angles from 30 to 150 are reverse, and angles from
        -30 to -150 are normal.
        Note that the 'Unspecified' case is not considered in this class
        as rake is required as an input variable
        """
        SS, NS, RS = 0.0, 0.0, 0.0
        if np.abs(rup.rake) <= 30.0 or (180.0 - np.abs(rup.rake)) <= 30.0:
            # strike-slip
            SS = 1.0
        elif rup.rake > 30.0 and rup.rake < 150.0:
            # reverse
            RS = 1.0
        else:
            # normal
            NS = 1.0
        return (C["sofN"] * NS) + (C["sofR"] * RS) + (C["sofS"] * SS)

    def _get_site_amplification_term(self, C, vs30):
        """
        Returns the site amplification term for the case in which Vs30
        is used directly
        """
        return C["gamma"] * np.log10(vs30 / self.CONSTS["Vref"])

    def _get_stddevs(self, C, stddev_types, num_sites):
        """
        Return standard deviations as defined in table 2.
        """
        stddevs = []
        for stddev_type in stddev_types:
            assert stddev_type in self.DEFINED_FOR_STANDARD_DEVIATION_TYPES
            if stddev_type == const.StdDev.TOTAL:
                stddevs.append(C['sigma'] + np.zeros(num_sites))
            elif stddev_type == const.StdDev.INTRA_EVENT:
                stddevs.append(C['phi'] + np.zeros(num_sites))
            elif stddev_type == const.StdDev.INTER_EVENT:
                stddevs.append(C['tau'] + np.zeros(num_sites))
        return stddevs

    #: Coefficients from Table 2
    COEFFS = CoeffsTable(sa_damping=5, table="""
    imt         e1          c1         c2          h         c3          b1          b2         b3       gamma        sofN        sofR        sofS        tau        phi     phis2s      sigma
    pgv    2.264810   -1.224080   0.202085   5.061240   0.000000    0.162802   -0.092632   0.044030   -0.529443   -0.009477    0.040057   -0.030581   0.156062   0.277714   0.120398   0.318560
    pga    3.328190   -1.239800   0.217320   5.264860   0.001186   -0.085505   -0.092564   0.000000   -0.301899   -0.039770    0.077525   -0.037756   0.149977   0.282398   0.165611   0.319753
    0.02   3.370530   -1.263580   0.220527   5.200820   0.001118   -0.089055   -0.091615   0.000000   -0.294021   -0.039236    0.081052   -0.041816   0.158670   0.282356   0.183959   0.323885
    0.04   3.439220   -1.310250   0.244676   4.916690   0.001092   -0.116919   -0.078379   0.000000   -0.241765   -0.037720    0.079778   -0.042058   0.154621   0.291143   0.187409   0.329654
    0.07   3.596510   -1.290510   0.231878   5.359220   0.001821   -0.085012   -0.056997   0.000000   -0.207629   -0.045944    0.087497   -0.041553   0.172785   0.291499   0.199913   0.338860
    0.10   3.686380   -1.281780   0.219406   6.121460   0.002114   -0.113550   -0.075333   0.000000   -0.173237   -0.038053    0.084710   -0.046659   0.169691   0.301967   0.208178   0.346379
    0.15   3.686320   -1.176970   0.182662   5.741540   0.002540   -0.092873   -0.102433   0.073904   -0.202492   -0.026729    0.067844   -0.041115   0.152902   0.305804   0.212124   0.341900
    0.20   3.682620   -1.103010   0.133154   5.319980   0.002421    0.010086   -0.105184   0.150461   -0.291228   -0.032654    0.075977   -0.043323   0.150055   0.300109   0.190469   0.335532
    0.26   3.643140   -1.085270   0.115603   5.134550   0.001964    0.029940   -0.127173   0.178899   -0.354425   -0.033844    0.074982   -0.041138   0.151209   0.302419   0.187037   0.338114
    0.30   3.639850   -1.105910   0.108276   5.128460   0.001499    0.039190   -0.138578   0.189682   -0.393060   -0.037245    0.076701   -0.039456   0.157946   0.297402   0.174118   0.336741
    0.36   3.574800   -1.099550   0.103083   4.905570   0.001049    0.052103   -0.151385   0.216011   -0.453905   -0.027907    0.069790   -0.041883   0.165436   0.294395   0.175848   0.337694
    0.40   3.530060   -1.095380   0.101111   4.953860   0.000851    0.045846   -0.162090   0.224827   -0.492063   -0.025631    0.072567   -0.046936   0.157728   0.296992   0.169883   0.336278
    0.46   3.433870   -1.065860   0.109066   4.659900   0.000868    0.060084   -0.165897   0.197716   -0.564463   -0.018664    0.064599   -0.045936   0.173005   0.291868   0.164162   0.339290
    0.50   3.405540   -1.057670   0.112197   4.432050   0.000789    0.088319   -0.164108   0.154750   -0.596196   -0.017419    0.060283   -0.042863   0.180820   0.289957   0.165090   0.341717
    0.60   3.304420   -1.050140   0.121734   4.216570   0.000487    0.120182   -0.163325   0.117576   -0.667824   -0.000486    0.044921   -0.044435   0.182233   0.292223   0.175634   0.344388
    0.70   3.238820   -1.050210   0.114674   4.171270   0.000159    0.166933   -0.161112   0.112005   -0.738390    0.011203    0.028151   -0.039354   0.189396   0.289307   0.168617   0.345788
    0.80   3.153700   -1.046540   0.129522   4.200160   0.000000    0.193817   -0.156553   0.051729   -0.794076    0.016526    0.020352   -0.036878   0.189074   0.288815   0.168170   0.345200
    0.90   3.134810   -1.046120   0.114536   4.480030   0.000000    0.247547   -0.153819   0.081575   -0.821699    0.016449    0.021242   -0.037691   0.191986   0.293264   0.183719   0.350517
    1.00   3.124740   -1.052700   0.103471   4.416130   0.000000    0.306569   -0.147558   0.092837   -0.826584    0.026307    0.018604   -0.044911   0.195026   0.297907   0.200775   0.356067
    1.30   2.898410   -0.973828   0.104898   4.258210   0.000000    0.349119   -0.149483   0.108209   -0.845047    0.025234    0.022362   -0.047596   0.181782   0.306676   0.209625   0.356504
    1.50   2.847270   -0.983388   0.109072   4.566970   0.000000    0.384546   -0.139867   0.098737   -0.823200    0.018674    0.023089   -0.041763   0.177752   0.316312   0.218569   0.362835
    1.80   2.680160   -0.983082   0.164027   4.680080   0.000000    0.343663   -0.135933   0.000000   -0.778657    0.011371    0.016688   -0.028059   0.163242   0.326484   0.221367   0.365020
    2.00   2.601710   -0.979215   0.163344   4.581860   0.000000    0.331747   -0.148282   0.000000   -0.769243    0.005535    0.019857   -0.025392   0.164958   0.329916   0.225350   0.368857
    2.60   2.390670   -0.977532   0.211831   5.395170   0.000000    0.357514   -0.122539   0.000000   -0.769609    0.008735    0.023314   -0.032049   0.170280   0.320626   0.210193   0.363037
    3.00   2.253990   -0.940373   0.227241   5.741730   0.000000    0.385526   -0.111445   0.000000   -0.732072    0.022989   -0.020662   -0.002327   0.176546   0.314165   0.207247   0.360373
    """)

    CONSTS = {"Mref": 5.5,
              "Mh": 6.75,
              "Rref": 1.0,
              "Vref": 800.0}


class BindiEtAl2014RjbEC8(BindiEtAl2014Rjb):
    """
    Implements the Bindi et al (2014) GMPE for the case where Joyner-Boore
    distance is specified but Eurocode 8 Site classification is used.
    """

    def _get_site_amplification_term(self, C, vs30):
        """
        Returns the site amplification given Eurocode 8 site classification
        """
        f_s = np.zeros_like(vs30)
        # Site class B
        idx = np.logical_and(vs30 < 800.0, vs30 >= 360.0)
        f_s[idx] = C["eB"]
        # Site Class C
        idx = np.logical_and(vs30 < 360.0, vs30 >= 180.0)
        f_s[idx] = C["eC"]
        # Site Class D
        idx = vs30 < 180.0
        f_s[idx] = C["eD"]
        return f_s

    #: Coefficients from Table 1
    COEFFS = CoeffsTable(sa_damping=5, table="""
    imt           e1           c1          c2           h          c3           b1           b2          b3     eA          eB          eC          eD         sofN        sofR         sofS   sofU         tau         phi      phis2s       sigma
    pgv    2.3752200   -1.3047000   0.2094600   5.7619100   0.0000000    0.2739520   -0.0514249   0.0000000   0.00   0.1222580   0.2767380   0.3803060   -0.0018272   0.0574989    0.0226578   0.00   0.1860890   0.2712680   0.1771040   0.3289610
    pga    3.4507800   -1.3606100   0.2158730   6.1471700   0.0007325   -0.0208715   -0.0722425   0.0000000   0.00   0.1377150   0.2330480   0.2142270   -0.0322846   0.0736778   -0.0194313   0.00   0.1809040   0.2763350   0.2062880   0.3302840
    0.02   3.4780600   -1.3751900   0.2180950   5.9068400   0.0007101   -0.0268250   -0.0726043   0.0000000   0.00   0.1349040   0.2268270   0.2133570   -0.0280853   0.0775318   -0.0206414   0.00   0.1825330   0.2788230   0.2083930   0.3332580
    0.04   3.5800600   -1.4332700   0.2388390   5.7939400   0.0006852   -0.0568751   -0.0637298   0.0000000   0.00   0.1339730   0.2181360   0.1761830   -0.0386612   0.0603080   -0.0334023   0.00   0.1806300   0.2896520   0.2208590   0.3413580
    0.07   3.7816300   -1.4613400   0.2258440   6.6201900   0.0011757   -0.0430520   -0.0497890   0.0000000   0.00   0.1397140   0.2068620   0.1456210   -0.0388934   0.0712603   -0.0273639   0.00   0.1941760   0.2966090   0.2357140   0.3545150
    0.10   3.7926000   -1.4144100   0.2086670   6.8924800   0.0016018   -0.0584518   -0.0644335   0.0000000   0.00   0.1552360   0.2101680   0.1560520   -0.0195457   0.0842461   -0.0228315   0.00   0.1819260   0.3069180   0.2449690   0.3567850
    0.15   3.7783800   -1.2934400   0.1635500   6.7173500   0.0020288   -0.0358636   -0.0915379   0.0855372   0.00   0.1589370   0.1997260   0.1864950   -0.0205578   0.0742690   -0.0267287   0.00   0.1813800   0.3059980   0.2418330   0.3557160
    0.20   3.6927600   -1.1819500   0.1191010   5.7865900   0.0021229    0.0672019   -0.0915054   0.1452510   0.00   0.1389680   0.2165840   0.1995000    0.0189532   0.1333520    0.0266652   0.00   0.1779030   0.3001310   0.2199130   0.3488960
    0.26   3.6761000   -1.1654900   0.1026090   5.4519200   0.0016536    0.1297160   -0.0975145   0.1359860   0.00   0.1267370   0.2491410   0.2297360    0.0235627   0.1434280    0.0392335   0.00   0.1782110   0.3006520   0.2006620   0.3495010
    0.30   3.6696600   -1.1752000   0.0991640   5.4073200   0.0012478    0.1454990   -0.1048800   0.1351590   0.00   0.1138810   0.2592740   0.2525040    0.0184383   0.1386620    0.0434893   0.00   0.1842540   0.2954630   0.1932850   0.3482070
    0.36   3.5972100   -1.1447900   0.0950077   5.0206400   0.0009190    0.1681790   -0.1142230   0.1495820   0.00   0.1096380   0.2742110   0.2826860    0.0126751   0.1224720    0.0366617   0.00   0.1840850   0.2951920   0.1875690   0.3478870
    0.40   3.5567100   -1.1452000   0.0943173   5.0806600   0.0006728    0.1738840   -0.1201490   0.1518490   0.00   0.1102230   0.2808360   0.3016570    0.0221499   0.1291810    0.0461228   0.00   0.1917340   0.2928780   0.1807580   0.3500560
    0.46   3.5017700   -1.1308000   0.1004560   4.9577700   0.0005832    0.1908130   -0.1231770   0.1308470   0.00   0.1080790   0.2980220   0.3470800    0.0171645   0.1159680    0.0447782   0.00   0.1996900   0.2910960   0.1829410   0.3530060
    0.50   3.4571700   -1.1163100   0.1019940   4.6987700   0.0005088    0.2035220   -0.1260770   0.1223390   0.00   0.1087830   0.3052950   0.3709890    0.0167117   0.1142520    0.0498222   0.00   0.2000630   0.2916400   0.1759880   0.3536650
    0.60   3.3879900   -1.1047000   0.1045290   4.5464300   0.0002493    0.2426030   -0.1260110   0.0959648   0.00   0.1069290   0.3212960   0.4405810    0.0136945   0.1002230    0.0420176   0.00   0.2077560   0.2894590   0.1764530   0.3562990
    0.70   3.3438100   -1.1160900   0.0999892   4.6401700   0.0000000    0.2809220   -0.1246140   0.0920475   0.00   0.1029650   0.3318010   0.5035620    0.0243993   0.0921893    0.0496086   0.00   0.2088280   0.2909520   0.1789540   0.3581370
    0.80   3.2580200   -1.1090700   0.1197540   4.6384900   0.0000000    0.2912420   -0.1226040   0.0327477   0.00   0.0974809   0.3412810   0.5427090    0.0244827   0.0787394    0.0492262   0.00   0.2111360   0.2941680   0.1803100   0.3620960
    0.90   3.1689900   -1.0871400   0.1178790   4.5048100   0.0000000    0.3113620   -0.1237300   0.0525761   0.00   0.0870567   0.3428030   0.5816330    0.0423755   0.0912537    0.0684516   0.00   0.2202130   0.2936180   0.1945490   0.3670220
    1.00   3.1464900   -1.0938700   0.1142850   4.5311800   0.0000000    0.3593240   -0.1177380   0.0445842   0.00   0.0864957   0.3452100   0.5901750    0.0536792   0.0913821    0.0674554   0.00   0.2215240   0.2953650   0.1960910   0.3692060
    1.30   2.8951500   -1.0304200   0.1366660   4.5320800   0.0000000    0.3934710   -0.1154410   0.0000000   0.00   0.0920913   0.3452920   0.6188050    0.0879720   0.1198630    0.1007680   0.00   0.2224930   0.2966570   0.1968170   0.3708220
    1.50   2.7636600   -1.0143700   0.1441000   4.6117200   0.0000000    0.4325130   -0.1042960   0.0000000   0.00   0.1033850   0.3428420   0.6531920    0.1233930   0.1652170    0.1436380   0.00   0.2181050   0.3038780   0.1984900   0.3740470
    1.80   2.6366200   -1.0483800   0.1808380   5.3960700   0.0000000    0.4341620   -0.0962979   0.0000000   0.00   0.1072510   0.3337060   0.6189560    0.1618860   0.1931980    0.2016950   0.00   0.2129050   0.3103600   0.2011260   0.3763670
    2.00   2.6215000   -1.0543000   0.1813670   5.5677200   0.0000000    0.4587520   -0.0955763   0.0000000   0.00   0.0993580   0.3297090   0.6041770    0.1397940   0.1679290    0.1858140   0.00   0.2222400   0.3096380   0.2026760   0.3811380
    2.60   2.4631800   -1.0730800   0.2264070   6.2349100   0.0000000    0.4753050   -0.0788118   0.0000000   0.00   0.1059130   0.3124540   0.5776570    0.1256950   0.1533960    0.1732810   0.00   0.2230410   0.3107550   0.2070800   0.3825130
    3.00   2.3968000   -1.0570600   0.2481260   6.7674000   0.0000000    0.4810800   -0.0719689   0.0000000   0.00   0.1276420   0.3186840   0.5975880    0.0524242   0.0471185    0.1166450   0.00   0.2365760   0.3021860   0.2124100   0.3837770
    """)


class BindiEtAl2014RjbEC8NoSOF(BindiEtAl2014RjbEC8):
    """
    Implements the Bindi et al (2014) GMPE for the case in which
    the site amplification is defined according to the Eurocode 8
    classification, but style-of-faulting is neglected
    """
    #: Required rupture parameters are magnitude
    REQUIRES_RUPTURE_PARAMETERS = set(('mag',))

    def _get_mean(self, C, rup, dists, sites):
        """
        Returns the mean value of ground motion - noting that in this case
        the style-of-faulting term is neglected
        """
        return (self._get_magnitude_scaling_term(C, rup.mag) +
                self._get_distance_scaling_term(C, dists.rjb, rup.mag) +
                self._get_site_amplification_term(C, sites.vs30))


class BindiEtAl2014Rhyp(BindiEtAl2014Rjb):
    """
    Implements the Bindi et al (2014) GMPE for the case in which hypocentral
    distance is preferred, style-of-faulting is specfieid and for which the
    site amplification is dependent directly on Vs30
    """

    #: Required distance measure is Rhypo (eq. 1).
    REQUIRES_DISTANCES = set(('rhypo', ))

    def _get_mean(self, C, rup, dists, sites):
        """
        Returns the mean value of ground motion
        """
        return (self._get_magnitude_scaling_term(C, rup.mag) +
                self._get_distance_scaling_term(C, dists.rhypo, rup.mag) +
                self._get_style_of_faulting_term(C, rup) +
                self._get_site_amplification_term(C, sites.vs30))

    #: Coefficients from Table 4
    COEFFS = CoeffsTable(sa_damping=5, table="""
    imt           e1          c1          c2          h         c3          b1          b2         b3       gamma          sofN         sofR         sofS        tau        phi     phis2s      sigma
    pgv     3.242490   -1.575560    0.079177   4.389180   0.000000    0.472433   -0.072548   0.436952   -0.508833     -0.015720    0.0713860    -0.055666   0.193206   0.295126   0.178867   0.352744
    pga     4.273910   -1.578210    0.108218   4.827430   0.000096    0.217109   -0.068256   0.352976   -0.293242     -0.047215    0.1109790    -0.063764   0.145783   0.291566   0.186662   0.325981
    0.02    4.339700   -1.604020    0.103401   4.478520   0.000026    0.230422   -0.066535   0.363906   -0.286524     -0.046923    0.1150630    -0.068140   0.154538   0.290986   0.188250   0.329477
    0.04    4.468390   -1.685360    0.126703   4.580630   0.000000    0.205651   -0.052810   0.323734   -0.232462     -0.045172    0.1145970    -0.069425   0.158402   0.298261   0.192664   0.337714
    0.07    4.572400   -1.638630    0.123954   5.120960   0.000722    0.226272   -0.029802   0.311109   -0.195629     -0.053205    0.1216530    -0.068448   0.169775   0.302117   0.205229   0.346552
    0.10    4.552550   -1.579470    0.125609   5.675110   0.001239    0.167382   -0.050907   0.348968   -0.168432     -0.047039    0.1190210    -0.071982   0.165148   0.310963   0.212643   0.352097
    0.15    4.511190   -1.447100    0.084610   4.824800   0.001692    0.194714   -0.078451   0.448903   -0.194539     -0.036312    0.1024810    -0.066169   0.145533   0.310621   0.216313   0.343023
    0.20    4.495710   -1.370390    0.038536   4.569650   0.001586    0.289627   -0.081550   0.533244   -0.270912     -0.038675    0.1075550    -0.068879   0.144701   0.308845   0.202040   0.341063
    0.26    4.492240   -1.366790    0.012937   3.948020   0.001059    0.321065   -0.104184   0.596455   -0.323555     -0.036577    0.1032360    -0.066659   0.156869   0.313737   0.199484   0.350769
    0.30    4.517260   -1.400780    0.001980   4.268160   0.000565    0.336096   -0.115261   0.612107   -0.363199     -0.038065    0.1048180    -0.066753   0.165195   0.311052   0.186722   0.352197
    0.36    4.465590   -1.409730    0.000489   4.399780   0.000060    0.346351   -0.127114   0.600314   -0.430464     -0.028534    0.0955090    -0.066975   0.164907   0.310509   0.180734   0.351583
    0.40    4.468340   -1.428930   -0.009096   4.603900   0.000000    0.353351   -0.137776   0.621323   -0.467397     -0.026163    0.0971980    -0.071036   0.165146   0.310959   0.182064   0.352092
    0.46    4.371500   -1.406550    0.001010   4.602540   0.000000    0.357170   -0.142768   0.589127   -0.531694     -0.019282    0.0902020    -0.070920   0.181401   0.306033   0.176797   0.355756
    0.50    4.341980   -1.397510    0.004238   4.430450   0.000000    0.384532   -0.140916   0.543301   -0.555531     -0.017580    0.0860120    -0.068432   0.189686   0.304174   0.178065   0.358473
    0.60    4.214950   -1.379190    0.013733   3.696150   0.000000    0.408720   -0.141998   0.504772   -0.627036   -0.00115693    0.0712886   -0.0701314   0.200502   0.306270   0.189183   0.366066
    0.70    4.148320   -1.371690    0.002264   3.009780   0.000000    0.466754   -0.138065   0.498126   -0.698998      0.010003    0.0543880    -0.064390   0.201810   0.308270   0.264361   0.368453
    0.80    4.092460   -1.377360    0.008956   3.157270   0.000000    0.510102   -0.132630   0.437529   -0.757522      0.015018    0.0458650    -0.060883   0.211664   0.308550   0.208994   0.374172
    0.90    4.083240   -1.386490   -0.004532   3.453700   0.000000    0.567727   -0.127244   0.458110   -0.786632      0.016380    0.0442240    -0.060604   0.225279   0.313873   0.225906   0.386351
    1.00    4.072070   -1.387350   -0.018546   3.316300   0.000000    0.631338   -0.121241   0.474982   -0.791438      0.026396    0.0411370    -0.067532   0.238973   0.318631   0.246861   0.398289
    1.30    3.779540   -1.273430   -0.013766   3.049760   0.000000    0.650829   -0.129005   0.488244   -0.803656      0.024922    0.0383290    -0.063251   0.212162   0.324083   0.245588   0.387354
    1.50    3.694470   -1.264770   -0.003373   3.654820   0.000000    0.674600   -0.119081   0.461122   -0.780198      0.019123    0.0386970    -0.057820   0.208441   0.334250   0.244150   0.393917
    1.80    3.454080   -1.273640    0.083746   4.599880   0.000000    0.563304   -0.117803   0.184126   -0.749008      0.011676    0.0292490    -0.040925   0.203238   0.342873   0.256308   0.398582
    2.00    3.389010   -1.282830    0.086724   4.952850   0.000000    0.548353   -0.129571   0.171017   -0.744073      0.004993    0.0335870    -0.038580   0.205751   0.347114   0.261830   0.403511
    2.60    3.066010   -1.234270    0.150146   4.455110   0.000000    0.541750   -0.103699   0.009303   -0.744468      0.006027    0.0305080    -0.036535   0.190711   0.339373   0.242015   0.389288
    3.00    2.893910   -1.164610    0.162354   4.623210   0.000000    0.590765   -0.085329   0.034058   -0.693999      0.018621   -0.0189820     0.000361   0.183363   0.326297   0.228650   0.374289
    """)


class BindiEtAl2014RhypEC8(BindiEtAl2014RjbEC8):
    """
    Implements the Bindi et al (2014) GMPE for the case in which hypocentral
    distance is preferred, style-of-faulting is specfied and site amplification
    is characterised according to the Eurocode 8 site class
    """
    #: Required distance measure is Rhypo
    REQUIRES_DISTANCES = set(('rhypo', ))

    def _get_mean(self, C, rup, dists, sites):
        """
        Returns the mean value of ground motion
        """
        return (self._get_magnitude_scaling_term(C, rup.mag) +
                self._get_distance_scaling_term(C, dists.rhypo, rup.mag) +
                self._get_style_of_faulting_term(C, rup) +
                self._get_site_amplification_term(C, sites.vs30))

    #: Coefficients from Table 3
    COEFFS = CoeffsTable(sa_damping=5, table="""
    imt          e1          c1         c2          h         c3         b1          b2         b3     eA         eB         eC         eD        sofN        sofR        sofS   sofU        tau        phi     phis2s      sigma
    pgv    3.292610   -1.665480   0.136478   6.310130   0.000000   0.436373   -0.049720   0.264336   0.00   0.130319   0.272298   0.350870   -0.090870    0.013283   -0.067382   0.00   0.241933   0.284305   0.231138   0.373311
    pga    4.366930   -1.752120   0.150507   7.321920   0.000000   0.144291   -0.066081   0.284211   0.00   0.143778   0.231064   0.187402   -0.071745    0.084958   -0.057097   0.00   0.195249   0.284622   0.213455   0.345155
    0.02   4.420440   -1.777540   0.147715   7.064280   0.000000   0.147874   -0.066206   0.297090   0.00   0.141110   0.225339   0.187033   -0.065307    0.091732   -0.056126   0.00   0.197407   0.287767   0.216309   0.348969
    0.04   4.549920   -1.854600   0.165968   6.982270   0.000000   0.124402   -0.056602   0.260601   0.00   0.140350   0.217010   0.146507   -0.065379    0.088098   -0.057671   0.00   0.204345   0.297881   0.222929   0.361234
    0.07   4.732850   -1.878220   0.157048   8.133700   0.000000   0.138028   -0.040787   0.276090   0.00   0.145543   0.206101   0.115846   -0.051290    0.113143   -0.037623   0.00   0.208843   0.304438   0.242821   0.369185
    0.10   4.675030   -1.799170   0.151808   8.380980   0.000548   0.098832   -0.056937   0.322027   0.00   0.158622   0.208849   0.125428   -0.037487    0.120065   -0.036904   0.00   0.195390   0.313320   0.251339   0.369252
    0.15   4.569650   -1.614050   0.105601   7.496250   0.001183   0.125747   -0.083501   0.464456   0.00   0.162534   0.197589   0.158161   -0.047090    0.098046   -0.050606   0.00   0.193856   0.310861   0.247987   0.366353
    0.20   4.450170   -1.465010   0.056755   6.272220   0.001431   0.236642   -0.083464   0.542025   0.00   0.143446   0.213637   0.170195   -0.021448    0.139454   -0.012460   0.00   0.191231   0.306652   0.226544   0.361392
    0.26   4.455930   -1.443420   0.032061   5.480400   0.000982   0.313239   -0.089718   0.555789   0.00   0.133443   0.244854   0.202162   -0.030488    0.132769   -0.015155   0.00   0.192222   0.308241   0.214042   0.363266
    0.30   4.471710   -1.460160   0.025927   5.503160   0.000554   0.332549   -0.097218   0.551296   0.00   0.121637   0.254554   0.226009   -0.042269    0.119803   -0.019227   0.00   0.199096   0.304125   0.207111   0.363499
    0.36   4.387990   -1.418420   0.022150   4.769520   0.000269   0.355357   -0.106041   0.543724   0.00   0.118062   0.268087   0.258058   -0.056669    0.092863   -0.034960   0.00   0.199491   0.304728   0.201784   0.364220
    0.40   4.376090   -1.428430   0.016902   4.819740   0.000000   0.368987   -0.111955   0.547881   0.00   0.119481   0.275041   0.275672   -0.053268    0.091980   -0.032188   0.00   0.207716   0.302796   0.194828   0.367194
    0.46   4.333720   -1.425030   0.025903   5.109610   0.000000   0.379142   -0.115152   0.511833   0.00   0.117659   0.291964   0.321124   -0.062510    0.073772   -0.039294   0.00   0.216313   0.301380   0.197633   0.370974
    0.50   4.293590   -1.414650   0.028368   4.955190   0.000000   0.389410   -0.118151   0.495459   0.00   0.118871   0.298870   0.344584   -0.064738    0.069449   -0.037414   0.00   0.225415   0.300553   0.198934   0.375691
    0.60   4.239150   -1.406030   0.026980   4.635970   0.000000   0.430341   -0.119284   0.475308   0.00   0.117717   0.314097   0.412316   -0.076075    0.045871   -0.054881   0.00   0.234484   0.299514   0.208675   0.380383
    0.70   4.196960   -1.412970   0.020876   4.293770   0.000000   0.470648   -0.118095   0.460014   0.00   0.115734   0.325887   0.477053   -0.074956    0.028575   -0.055644   0.00   0.246498   0.301897   0.212696   0.389747
    0.80   4.114530   -1.404290   0.038146   4.010590   0.000000   0.481962   -0.116743   0.393948   0.00   0.110981   0.334461   0.517530   -0.081628    0.008429   -0.063434   0.00   0.249844   0.305995   0.224068   0.395038
    0.90   4.032490   -1.389770   0.037094   3.978120   0.000000   0.504043   -0.116645   0.400442   0.00   0.103765   0.334934   0.559004   -0.064291    0.019498   -0.045616   0.00   0.261433   0.307220   0.240384   0.403399
    1.00   4.011400   -1.395430   0.034061   4.096680   0.000000   0.550001   -0.110860   0.386023   0.00   0.103026   0.336196   0.566463   -0.057168    0.014893   -0.051388   0.00   0.274446   0.309616   0.244465   0.413742
    1.30   3.684020   -1.302310   0.069535   3.732900   0.000000   0.544404   -0.113618   0.282169   0.00   0.108865   0.337519   0.592894   -0.034664    0.029824   -0.025079   0.00   0.265310   0.311777   0.244067   0.409383
    1.50   3.535870   -1.273510   0.082246   4.074080   0.000000   0.570581   -0.103758   0.249760   0.00   0.119032   0.333110   0.626267   -0.010668    0.060267    0.007386   0.00   0.269363   0.316539   0.236824   0.415637
    1.80   3.465880   -1.361020   0.137018   6.097100   0.000000   0.524014   -0.101089   0.046975   0.00   0.123814   0.323505   0.600530   -0.002975    0.058459    0.039471   0.00   0.275390   0.323622   0.257636   0.424936
    2.00   3.469100   -1.381110   0.137878   6.539170   0.000000   0.551312   -0.098766   0.000000   0.00   0.115091   0.320404   0.586654   -0.023796    0.034964    0.025270   0.00   0.277179   0.325724   0.259839   0.427696
    2.60   3.283840   -1.389770   0.188643   7.040110   0.000000   0.547984   -0.084231   0.000000   0.00   0.124833   0.306133   0.548523   -0.050664    0.003435    0.007396   0.00   0.278908   0.327756   0.263531   0.430364
    3.00   3.264700   -1.399740   0.216533   8.339210   0.000000   0.552993   -0.071344   0.000000   0.00   0.143969   0.315187   0.559213   -0.146666   -0.128655   -0.067567   0.00   0.283885   0.320266   0.267078   0.427973
    """)


class BindiEtAl2014RhypEC8NoSOF(BindiEtAl2014RhypEC8):
    """
    Implements the Bindi et al. (2014) GMPE for the case in which
    hypocentral distance is preferred, Eurocode 8 site amplification is used
    and style-of-faulting is unspecfied.
    """
    #: Required rupture parameters are magnitude
    REQUIRES_RUPTURE_PARAMETERS = set(('mag',))

    def _get_mean(self, C, rup, dists, sites):
        """
        Returns the mean value of ground motion - noting that in this case
        the style-of-faulting term is neglected
        """
        return (self._get_magnitude_scaling_term(C, rup.mag) +
                self._get_distance_scaling_term(C, dists.rhypo, rup.mag) +
                self._get_site_amplification_term(C, sites.vs30))
